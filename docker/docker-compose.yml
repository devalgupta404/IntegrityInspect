version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: integrity-inspect-api
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GPT_MODEL=${GPT_MODEL:-gpt-4-vision-preview}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:8080}
    volumes:
      - ../backend/simulation_videos:/app/simulation_videos
      - backend_uploads:/app/.local_uploads
      - ../backend/logs:/app/logs
    depends_on:
      - redis
    networks:
      - integrity-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: integrity-inspect-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - integrity-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: integrity-inspect-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - backend_uploads:/var/www/uploads:ro
    depends_on:
      - backend
    networks:
      - integrity-network
    restart: unless-stopped

volumes:
  backend_uploads:
    driver: local
  redis_data:
    driver: local

networks:
  integrity-network:
    driver: bridge